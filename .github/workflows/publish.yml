name: publish bsdtar prebuild executable

on:
  workflow_dispatch:

jobs:
  netbsd-amd64:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://ftp.netbsd.org/pub/NetBSD/
        target-version: ['9.2', '9.3', '9.4', '10.0']

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install netbsd-${{ matrix.target-version }}-amd64/bsdtar --static
      - run: ./ppkg pack    netbsd-${{ matrix.target-version }}-amd64/bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---netbsd-${{ matrix.target-version }}-amd64-tar-xz
          path: bsdtar-*-netbsd-${{ matrix.target-version }}-amd64.tar.xz


  openbsd-amd64:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://cdn.openbsd.org/pub/OpenBSD/
        target-version: ['7.5', '7.4', '7.3']

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install openbsd-${{ matrix.target-version }}-amd64/bsdtar
      - run: ./ppkg pack    openbsd-${{ matrix.target-version }}-amd64/bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---openbsd-${{ matrix.target-version }}-amd64-tar-xz
          path: bsdtar-*-openbsd-${{ matrix.target-version }}-amd64.tar.xz

  freebsd-amd64:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://archive.freebsd.org/old-releases/amd64/
        target-version: ['13.0', '13.1', '13.2', '13.3', '14.0']

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install freebsd-${{ matrix.target-version }}-amd64/bsdtar --static
      - run: ./ppkg pack    freebsd-${{ matrix.target-version }}-amd64/bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---freebsd-${{ matrix.target-version }}-amd64-tar-xz
          path: bsdtar-*-freebsd-${{ matrix.target-version }}-amd64.tar.xz


  macos:

    runs-on: macos-14

    strategy:
      fail-fast: false
      matrix:
        target-version: ['10.15', '11.0', '12.0', '13.0', '14.0']
        target-arch: [x86_64, arm64]

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod a+x xcpkg
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-${{ matrix.target-version }}-${{ matrix.target-arch }}/bsdtar
      - run: ./xcpkg pack    MacOSX-${{ matrix.target-version }}-${{ matrix.target-arch }}/bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---macos${{ matrix.target-version }}-${{ matrix.target-arch }}-tar-xz
          path: bsdtar-*-macos*.tar.xz


  linux-x86_64:

    runs-on: ubuntu-latest

    container: alpine:3.19

    steps:
      - run: apk update
      - run: apk add wget g++ libc-dev linux-headers

      - run: wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install bsdtar --static
      - run: ./ppkg pack    bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-x86_64-tar-xz
          path: bsdtar-*-linux-x86_64.tar.xz


  linux-aarch64:

    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add wget g++ libc-dev linux-headers

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install bsdtar --static
          run ./ppkg pack    bsdtar
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v $PWD:$PWD -w $PWD --name alpine arm64v8/alpine sh run.sh

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-aarch64-tar-xz
          path: bsdtar-*-linux-aarch64.tar.xz


  linux-ppc64le:

    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add wget g++ libc-dev linux-headers

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install bsdtar --static
          run ./ppkg pack    bsdtar
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v $PWD:$PWD -w $PWD --name alpine ppc64le/alpine sh run.sh

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-ppc64le-tar-xz
          path: bsdtar-*-linux-ppc64le.tar.xz


  linux-riscv64:

    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add wget g++ libc-dev linux-headers

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install bsdtar --static
          run ./ppkg pack    bsdtar
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v $PWD:$PWD -w $PWD --name alpine riscv64/alpine:edge sh run.sh

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-riscv64-tar-xz
          path: bsdtar-*-linux-riscv64.tar.xz



  linux-s390x:

    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add wget g++ libc-dev linux-headers

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install bsdtar --static
          run ./ppkg pack    bsdtar
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v $PWD:$PWD -w $PWD --name alpine s390x/alpine sh run.sh

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-s390x-tar-xz
          path: bsdtar-*-linux-s390x.tar.xz


  android:

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    steps:
      - run: apt -y update
      - run: apt -y install curl

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/master/ndk-pkg
      - run: chmod +x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg update
      - run: ./ndk-pkg install android-34-arm64-v8a,armeabi-v7a,x86_64,x86/bsdtar --static

      - run: ./ndk-pkg pack    android-34-arm64-v8a/bsdtar
      - run: ./ndk-pkg pack    android-34-armeabi-v7a/bsdtar
      - run: ./ndk-pkg pack    android-34-x86_64/bsdtar
      - run: ./ndk-pkg pack    android-34-x86/bsdtar

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---android
          path: bsdtar-*-android-*.tar.xz


  publish:
    needs: [freebsd-amd64, openbsd-amd64, netbsd-amd64, macos, linux-x86_64, linux-aarch64, linux-ppc64le, linux-riscv64, linux-s390x, android]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      - name: unpack
        run: |
          set -x

          for FILENAME in bsdtar-*.tar.xz
          do
                DIR_NAME="${FILENAME%.tar.xz}"

                tar xvf "$FILENAME"

                mv "$DIR_NAME/bin/bsdtar" "$DIR_NAME.exe"
          done

      - run: |
          # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
          git -c init.defaultBranch=master init
          git remote add origin ${{ github.repositoryUrl }}

          TAGNAME="$(date +%Y.%m.%d)"

          printf 'sha256sum:\n```\n%s\n```\n' "$(sha256sum bsdtar-*.exe)" > notes.md

          gh release create "$TAGNAME" bsdtar-*.exe --title "$TAGNAME" --notes-file notes.md
