name: publish bsdtar prebuild executable

on:
  workflow_dispatch:

jobs:
  dragonflybsd:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ['6.4']
        profile: [debug, release]

    steps:
      - uses: vmactions/dragonflybsd-vm@v1
        with:
          release: "${{ matrix.version }}.0"
          usesh: true
          sync: rsync
          copyback: true
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            set -e

            run pkg install -y curl libnghttp2 gcc

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod a+x ppkg
            run ./ppkg setup
            run ./ppkg update
            run ./ppkg install dragonflybsd-${{ matrix.version }}-x86_64/bsdtar --static --profile=${{ matrix.profile }}
            run ./ppkg bundle  dragonflybsd-${{ matrix.version }}-x86_64/bsdtar .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---dragonflybsd-${{ matrix.version }}-x86_64-${{ matrix.profile }}.tar.xz
          path: bsdtar-*-dragonflybsd-${{ matrix.version }}-x86_64.${{ matrix.profile }}.tar.xz



  freebsd:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ['14.3', '14.2', '14.1', '14.0', '13.5', '13.4', '13.3', '13.2']
        profile: [debug, release]

    steps:
      - uses: actions/checkout@v4

      - uses: cross-platform-actions/action@master
        with:
          operating_system: freebsd
          version: ${{ matrix.version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo pkg install -y curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod a+x ppkg

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install freebsd-${{ matrix.version }}-amd64/bsdtar --static --profile=${{ matrix.profile }}
            run ./ppkg bundle  freebsd-${{ matrix.version }}-amd64/bsdtar .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---freebsd-${{ matrix.version }}-amd64-${{ matrix.profile }}.tar.xz
          path: bsdtar-*-freebsd-${{ matrix.version }}-amd64.${{ matrix.profile }}.tar.xz



  openbsd:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ['7.7', '7.6', '7.5', '7.4', '7.3', '7.2']
        profile: [debug, release]

    steps:
      - uses: actions/checkout@v4

      - uses: cross-platform-actions/action@master
        with:
          operating_system: openbsd
          version: ${{ matrix.version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo pkg_add curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod a+x ppkg

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install openbsd-${{ matrix.version }}-amd64/bsdtar --profile=${{ matrix.profile }}
            run ./ppkg bundle  openbsd-${{ matrix.version }}-amd64/bsdtar .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---openbsd-${{ matrix.version }}-amd64-${{ matrix.profile }}.tar.xz
          path: bsdtar-*-openbsd-${{ matrix.version }}-amd64.${{ matrix.profile }}.tar.xz



  netbsd:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ['10.1', '10.0', '9.4', '9.3', '9.2']
        profile: [debug, release]

    steps:
      - uses: actions/checkout@v4

      - uses: cross-platform-actions/action@master
        with:
          operating_system: netbsd
          version: ${{ matrix.version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo pkgin -y install curl

            run curl -LO -k https://curl.se/ca/cacert.pem

            run export SSL_CERT_FILE="$PWD/cacert.pem"

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod a+x ppkg

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install netbsd-${{ matrix.version }}-amd64/bsdtar --static --profile=${{ matrix.profile }}
            run ./ppkg bundle  netbsd-${{ matrix.version }}-amd64/bsdtar .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---netbsd-${{ matrix.version }}-amd64-${{ matrix.profile }}.tar.xz
          path: bsdtar-*-netbsd-${{ matrix.version }}-amd64.${{ matrix.profile }}.tar.xz


  macos:

    runs-on: macos-15

    strategy:
      fail-fast: false
      matrix:
        target-version: ['10.15', '11.0', '12.0', '13.0', '14.0', '15.0']
        target-arch: [x86_64, arm64]
        profile: [debug, release]

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg

      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/bsdtar --profile=${{ matrix.profile }}
      - run: ./ppkg bundle  macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/bsdtar .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.${{ matrix.profile }}.tar.xz
          path: bsdtar-*.tar.xz


  linux:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target-arch: [loongarch64, x86_64, aarch64, ppc64le, riscv64, s390x]
        profile: [debug, release]

    steps:
      - run: |
          cat > run.sh <<EOF
          set -ex

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          ########################################################################

          run uname -a
          run id
          run pwd

          export GITHUB_ACTIONS=true

          ########################################################################

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install bsdtar --static --profile=${{ matrix.profile }}
          run ./ppkg bundle  bsdtar .tar.xz
          EOF

      - run: curl -LO https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/master/alpine-chroot-install
      - run: chmod +x alpine-chroot-install
      - run: sudo ./alpine-chroot-install -d /alpine -a ${{ matrix.target-arch }} -p wget -p g++ -p linux-headers
      - run: /alpine/enter-chroot sh run.sh
      - run: /alpine/destroy

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---linux-${{ matrix.target-arch }}.${{ matrix.profile }}.tar.xz
          path: bsdtar-*-linux-${{ matrix.target-arch }}.${{ matrix.profile }}.tar.xz


  android:

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    steps:
      - run: apt -y update
      - run: apt -y install curl

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/master/ndk-pkg
      - run: chmod +x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg update
      - run: ./ndk-pkg install android-35-arm64-v8a,armeabi-v7a,x86_64,x86/bsdtar --static

      - run: ./ndk-pkg bundle  android-35-arm64-v8a/bsdtar   .tar.xz
      - run: ./ndk-pkg bundle  android-35-armeabi-v7a/bsdtar .tar.xz
      - run: ./ndk-pkg bundle  android-35-x86_64/bsdtar      .tar.xz
      - run: ./ndk-pkg bundle  android-35-x86/bsdtar         .tar.xz

      - uses: actions/upload-artifact@v4
        with:
          name: bsdtar---android
          path: bsdtar-*-android-*.tar.xz


  publish:
    needs: [freebsd, openbsd, netbsd, macos, linux, android]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      - name: unpack
        run: |
          set -x

          for FILENAME in bsdtar-*.tar.xz
          do
                DIR_NAME="${FILENAME%.tar.xz}"

                tar xvf "$FILENAME"

                mv "$DIR_NAME/bin/bsdtar" "$DIR_NAME.exe"
          done

      - run: |
          # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
          git -c init.defaultBranch=master init
          git remote add origin ${{ github.repositoryUrl }}

          TAGNAME="$(date +%Y.%m.%d)"

          gh release create "$TAGNAME" bsdtar-*.exe --title "$TAGNAME"
